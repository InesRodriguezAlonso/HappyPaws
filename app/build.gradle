apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.happypaws"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        resValue "string", "google_maps_key", (project.findProperty("GOOGLE_MAPS_API_KEY") ?: "")

        buildConfigField "int", "CACHETIME", "432000"
        buildConfigField "String", "API_BASE_URL",  "\"https://my-json-server.typicode.com/InesRodriguezAlonso/MyJSONServerHappyPaws/blob/master/\""
        archivesBaseName = "$applicationId-v$versionCode"

        setProperty("archivesBaseName", applicationId + "-v" + versionName)
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    kapt {
        mapDiagnosticLocations = true
    }
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'

    // ButterKnife for View Injection.
    implementation 'com.jakewharton:butterknife:10.0.0'
    kapt "com.jakewharton:butterknife-compiler:10.0.0"

    // Glide image library
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'

    // Retrofit for REST Services.
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.1.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'

    // https://github.com/ReactiveX/RxAndroid
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'io.reactivex:rxjava:1.3.2'
    compileOnly 'javax.annotation:jsr250-api:1.0'
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'

    // Mockito
    testImplementation 'org.mockito:mockito-core:2.23.0'
    testImplementation 'org.mockito:mockito-inline:2.23.0'

    // RxBinding
    implementation 'com.jakewharton.rxbinding:rxbinding:0.4.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.21"

    //https://stackoverflow.com/questions/34376061/dagger-and-kotlin-dagger-doesnt-generate-component-classes
    // Dagger
    implementation 'com.google.dagger:dagger-android:2.18'
    implementation 'com.google.dagger:dagger-android-support:2.18'
    kapt 'com.google.dagger:dagger-android-processor:2.18'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.18'
    implementation 'javax.inject:javax.inject:1'
    implementation 'com.google.dagger:dagger:2.18'
    kapt 'com.google.dagger:dagger-compiler:2.18'

    // Shimmer effect
    implementation 'io.supercharge:shimmerlayout:2.1.0'

    // Google maps service
    implementation 'com.google.android.gms:play-services-maps:16.1.0'

    // Circle image view
    implementation 'de.hdodenhof:circleimageview:3.0.0'
}
repositories {
    mavenCentral()
}